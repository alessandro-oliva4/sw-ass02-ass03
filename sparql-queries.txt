PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cult: <http://culturalis.org/cult/0.1#>
PREFIX ext: <http://www.semanticweb.org/aless/ontologies/2021/4/culturalis-ext#>

# count of CIS subclasses

SELECT (COUNT(?subCIS) AS ?NClasses)
WHERE {
?subCIS rdfs:subClassOf* cult:CulturalInstitutionOrSite .
}

# number of libraries

SELECT (COUNT(?library) as ?libraryCount)
WHERE {
?library rdf:type cult:Library .
}

# count of collections for each CIS

SELECT ?cis (COUNT(?collection) as ?collectionCount)
WHERE {
?collection rdf:type cult:Collections .
?cis rdf:type cult:CulturalInstitutionOrSite .
?cis cult:maintains ?collection .
}
GROUP BY ?cis

# collections with "Archivio" in their name

SELECT ?collection
WHERE {
?collection a cult:Collections;
	ext:name ?name .
filter( regex(str(?name), "Archivio" ))
}

# contact points with opening time after 8:00

SELECT ?contactPoint
WHERE {
?contactPoint a ext:ContactPoint;
	ext:available ?spec .
?spec a ext:OpeningHoursSpecification;
	ext:opens ?time.
FILTER ( ?time > "08:00:00"^^xsd:time )
}

# count of activies hosted for each site

SELECT ?site (COUNT(?activity) as ?activityCount)
WHERE {
?activity rdf:type cult:Activity .
?site ext:hosts ?activity .
}
GROUP BY ?site

# sites that contains collections with "Casa Piani" in their name

SELECT ?site
WHERE {
?collection a cult:Collections ;
	ext:name ?name .
?site a cult:Site;
	ext:isSiteOf ?collection .
FILTER( regex(str(?name), "Casa Piani" ))
}

# select CIS and related services (blank field if a CIS has no services)

SELECT ?cis ?service
WHERE {
?cis a cult:CulturalInstitutionOrSite .
OPTIONAL {
?cis ext:provides ?service .
}
}




# count how many times CIS "nome" has changed their "ruolo" since 2010
SELECT (COUNT(?o) AS ?totalNumberOfNames)
WHERE {
	?s cult:hasRole ?o .
	?o ext:roleFor 'nome' .
	?o ext:withRole 'ruolo' .
	?interval a ext:timeInterval;
		ext:startDate ?startdate .
	FILTER ( xsd:dateTime(?startDate) >= '2010-01-01'^^xsd:dateTime )
}

# events hosted by "museo x"
SELECT ?event
WHERE {
	?cis a cult:CulturalInstitutionOrType ;
		ext:name ?cisName .
	?event a ext:Event ;
		ext:hostedBy ?cis .
	FILTER ( ?cisName='museo x'^^ext:name )
}

# agents that are not CIS
SELECT ?entity
WHERE {
	?entity rdf:type ?subAgents.
	?subAgents rdfs:subClassOf* cult:CulturalInstitutionOrSite .
}

# first 10 events featuring at least a subevent in descending order by number of subevents
SELECT ?event (count(?property) as ?numSubEvents) where {
  values ?property {
    ext:hasSubEvent
  }
  ?event ?property ?object 
}
GROUP BY ?event 
ORDER BY desc(?numSubEvents)
LIMIT 10

# free tickets' description
SELECT ?des
WHERE {
   ?fee a ext:Fee .
   FILTER NOT EXISTS {
      ?fee ext:includes ?ticket
   }
   ?ticket ext:description ?des .
}

# tickets that give access to event "ev" or cis "c"
SELECT ?ticket
WHERE {
	{ ?ticket ext:forAccess ?event . }
	UNION
	{ ?ticket ext:forAccess ?cis . }
	FILTER ( ?event='ev'^^ext:name )
	FILTER ( ?cis='c'^^ext:name )
}

# fee with expired validity
SELECT ?fee
WHERE {
	?fee ext:hasValidity ?validity .
	?validity ext:hasDuration ?duration .
	?duration ext:startDate ?endDate .
	FILTER ( xsd:dateTime(?endDate) < xsd:dateTime(NOW()) )
}

# access condition "x" exists
ASK
WHERE {
	?accessCondition ext:description ?desc .
	FILTER ( ?desc='x'^^rdfs:Literal )
}